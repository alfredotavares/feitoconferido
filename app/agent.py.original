from google.adk.agents import Agent
import json
import os

def load_reports():
    """Carrega relatórios da pasta data"""
    reports = []
    base_path = os.path.join(os.path.dirname(__file__), '..', 'data')
    
    if not os.path.exists(base_path):
        return reports
    
    try:
        for file in os.listdir(base_path):
            if file.endswith('.json'):
                with open(os.path.join(base_path, file), 'r') as f:
                    report = json.load(f)
                    report['_source_file'] = file
                    reports.append(report)
    except Exception:
        pass
    
    return reports

def load_criterios():
    """Carrega critérios da pasta criterios"""
    criterios_text = ""
    criterios_path = os.path.join(os.path.dirname(__file__), '..', 'criterios')
    
    if not os.path.exists(criterios_path):
        return "❌ Pasta criterios/ não encontrada"
    
    try:
        criterios_text += "=== CRITÉRIOS DE CONFORMIDADE ===\n\n"
        for file in os.listdir(criterios_path):
            if file.endswith('.txt'):
                criterios_text += f"--- {file.upper()} ---\n"
                with open(os.path.join(criterios_path, file), 'r', encoding='utf-8') as f:
                    criterios_text += f.read() + "\n\n"
        return criterios_text
    except Exception as e:
        return f"❌ Erro ao carregar critérios: {e}"

def analisar_conformidade(pergunta: str = "") -> str:
    """Analisa conformidade cruzando dados com critérios"""
    reports = load_reports()
    criterios = load_criterios()
    
    if not reports:
        return "❌ Nenhum relatório encontrado na pasta data/"
    
    if "❌" in criterios:
        return criterios  # Retorna erro se houver
    
    # Preparar contexto completo para o Gemini
    context = f"""
MISSÃO: Analisar conformidade técnica cruzando DADOS vs CRITÉRIOS

DADOS DOS SISTEMAS:
{json.dumps(reports, indent=2, ensure_ascii=False)}

{criterios}

PERGUNTA DO USUÁRIO: {pergunta}

INSTRUÇÕES DE ANÁLISE:
1. Compare cada sistema nos dados com os critérios aplicáveis
2. Identifique conformidades (✅) e não-conformidades (❌)
3. Use ⚠️ para conformidade parcial
4. Seja específico: cite valores exatos vs critérios
5. Priorize criticidade CRÍTICA > ALTA > MÉDIA
6. Sugira ações corretivas para não-conformidades
7. Foque no tipo de sistema da pergunta (PIX, ETL, Mobile, etc.)

FORMATO DE RESPOSTA:
🔍 SISTEMA: [nome]
📊 ANÁLISE:
   ✅/❌/⚠️ [Critério]: [Status] - [Justificativa]
💡 AÇÕES: [Recomendações]
"""
    
    return context

root_agent = Agent(
    name="feito_conferido_agent",
    model="gemini-2.0-flash",
    description="Especialista em análise de conformidade que cruza dados com critérios definidos",
    instruction="""Você é o FEITO CONFERIDO - analista de conformidade técnica.

Use analisar_conformidade para:
- Cruzar dados dos sistemas com critérios da pasta criterios/
- Identificar conformidades e não-conformidades
- Priorizar por criticidade (CRÍTICA > ALTA > MÉDIA)
- Ser específico com valores e evidências
- Sugerir ações corretivas

Seja técnico, objetivo e focado em resultados acionáveis.""",
    tools=[analisar_conformidade]
)
